 describe("Create project from Interface with no visualization and add all the illustrations one by one than delete them", function() {
     it("Verify that Illustry opens up", function() {
         cy.visit(`http://localhost:4200/projects`)
     })

     it("Verify that the add section opends up and add an illustrations", function() {
         cy.visit(`http://localhost:4200/projects`)
         cy.get("div > .mat-icon").click()
         cy.location(`pathname`).should('eq', '/add')
         cy.get(':nth-child(1) > .mat-form-field > .mat-form-field-wrapper > .mat-form-field-flex > .mat-form-field-infix').type("project with cypress")
         cy.get('#projectDescription').type("Generated description with cypress")
         cy.get('.btn').click()
         cy.get('#mat-dialog-0')
         cy.get('.ng-star-inserted > [align="center"] > .centerButton').click()
     })

     it("Creates a wordcloud visualization and Checks that wordcloud is created", function() {
         cy.visit('http://localhost:4200/projects/project%20with%20cypress/illustrations')
         cy.get('div > .mat-icon').click()
         cy.get('ngx-dropzone').attachFile('wordcloud.json', { subjectType: 'drag-n-drop' })
         cy.get('.mat-button-wrapper').click()
         cy.wait(1000)
         cy.reload()
         cy.contains('wordcloud').click()
         cy.contains('chart')
         cy.get('canvas')
     })
     it("Creates a Dot visualization and Checks that Dot is created ", function() {
         cy.visit(`http://localhost:4200/projects/project%20with%20cypress/illustrations`)
         cy.get('div > .mat-icon').click()
         cy.get('ngx-dropzone').attachFile('Dot.json', { subjectType: 'drag-n-drop' })
         cy.get('.mat-button-wrapper').click()
         cy.wait(1000)
         cy.reload()
         cy.contains('dot demo').click()
         cy.contains('graphviz')
         cy.get("svg")
         cy.get('#node1 > text')
         cy.get('#node2 > text')
         cy.get('#node3 > text')
     })
     it("Creates an Echart visualization and Checks that Echart is created", function() {
         cy.visit(`http://localhost:4200/projects/project%20with%20cypress/illustrations`)
         cy.get('div > .mat-icon').click()
         cy.get('ngx-dropzone').attachFile('echart.json', { subjectType: 'drag-n-drop' })
         cy.get('.mat-button-wrapper').click()
         cy.wait(1000)
         cy.reload()
         cy.contains('echart-demo').click()
         cy.contains('chart')
         cy.get("canvas")
     })
     it("Creates an Flg visualization and Checks that Flg is created", function() {
         cy.visit(`http://localhost:4200/projects/project%20with%20cypress/illustrations`)
         cy.get('div > .mat-icon').click()
         cy.get('ngx-dropzone').attachFile('Flg.json', { subjectType: 'drag-n-drop' })
         cy.get('.mat-button-wrapper').click()
         cy.wait(1000)
         cy.reload()
         cy.contains('flg').click()
         cy.contains('force-directed-graph')
         cy.get("#forced-graph")
         cy.get("#legend")
     })
     it("Creates an Heb visualization and Checks that Heb is created", function() {
         cy.visit(`http://localhost:4200/projects/project%20with%20cypress/illustrations`)
         cy.get('div > .mat-icon').click()
         cy.get('ngx-dropzone').attachFile('Heb.json', { subjectType: 'drag-n-drop' })
         cy.get('.mat-button-wrapper').click()
         cy.wait(1000)
         cy.reload()
         cy.contains('hebus').click()
         cy.contains('hierarchical-edge-bundling')
         cy.get("#hedgeBundleSvg")
     })
     it("Creates an Matrix visualization and Checks that Matrix is created", function() {
         cy.visit(`http://localhost:4200/projects/project%20with%20cypress/illustrations`)
         cy.get('div > .mat-icon').click()
         cy.get('ngx-dropzone').attachFile('matrix.json', { subjectType: 'drag-n-drop' })
         cy.get('.mat-button-wrapper').click()
         cy.wait(1000)
         cy.reload()
         cy.contains('matrix').click()
         cy.contains('matrix')
         cy.contains("nameG2$1")
         cy.contains("nameG1$1")
         cy.contains("8")
         cy.get("#magicbutton").click()
     })
     it("Creates a Plotly visualization and Checks that Plotly is created", function() {
         cy.visit(`http://localhost:4200/projects/project%20with%20cypress/illustrations`)
         cy.get('div > .mat-icon').click()
         cy.get('ngx-dropzone').attachFile('plotly.json', { subjectType: 'drag-n-drop' })
         cy.get('.mat-button-wrapper').click()
         cy.wait(1000)
         cy.reload()
         cy.contains('plotly').click()
         cy.contains('plotly')
         cy.get('.user-select-none')
         cy.contains('1')
     })
     it("Updates the dot visualization and Checks that the update of dot was successfull ", function() {
         cy.visit(`http://localhost:4200/projects/project%20with%20cypress/illustrations`)
         cy.get('div > .mat-icon').click()
         cy.get('ngx-dropzone').attachFile('updateDot.json', { subjectType: 'drag-n-drop' })
         cy.get('.mat-button-wrapper').click()
         cy.wait(1000)
         cy.reload()
         cy.contains('new')
         cy.contains('very new')
     })
     it("Creates 4 visualization at the time with the NodeLink model and Checks that the NodeLink visualizations were sucessfull", function() {
         cy.visit(`http://localhost:4200/projects/project%20with%20cypress/illustrations`)
         cy.get('div > .mat-icon').click()
         cy.get('ngx-dropzone').attachFile('NodeLink.json', { subjectType: 'drag-n-drop' })
         cy.get('.mat-button-wrapper').click()
         cy.wait(2500)
         cy.reload()
         cy.contains('node-link').click()
         cy.contains("graphviz")
         cy.contains("matrix").click()
         cy.contains('MetricsTest.scala')
         cy.contains('TimeWindowedKStream.java')
         cy.get("#magicbutton").click()
         cy.contains('hierarchical-edge-bundling').click()
         cy.get("#hedgeBundleSvg")
         cy.contains('force-directed-graph').click()
         cy.get("#forced-graph")
         cy.get("#legend")
     })
     it("Delete all the visualization", function() {
         for (let i = 0; i < 11; i++) {
             cy.visit(`http://localhost:4200/projects/project%20with%20cypress/illustrations`)
             cy.get(':nth-child(1) > :nth-child(5) > .mat-icon').click()
             cy.contains("Yes").click()
             cy.reload()
             cy.log(`Visualization ${i} was deleted`)
             cy.wait(1000)
         }
     })
     it("Deletes the project", function() {
         cy.origin('http://localhost:7000', () => {
             cy.visit('http://localhost:7000/api-docs')
             cy.get('#operations-Projects-delete_api_project__projectName_ > .opblock-summary > .opblock-summary-control > .arrow').click()
             cy.get('.btn').click()
             cy.get('.parameters-col_description > input').type('project with cypress')
             cy.get('.execute-wrapper > .btn').click()
         })
     })

 })